locals {
  # CA and issuer certificate can be generated by following this manual https://linkerd.io/2.12/tasks/generate-certificates/#generating-the-certificates-with-step
  values = yamlencode({
    "identityTrustAnchorsPEM" : file("${path.root}/pki/ca.crt")
    "identity" : {
      "issuer" : {
        "tls" : {
          "crtPEM" : file("${path.root}/pki/issuer.crt")
          "keyPEM" : file("${path.root}/pki/issuer.key")
        }
      }
    }
  })
  sync_policy = {
    automated   = {}
    syncOptions = ["CreateNamespace=true"]
  }
}

module "addon_installation_disabled" {
  source = "../../"

  enabled = false
}

module "addon_installation_helm" {
  source = "../../"

  enabled           = true
  argo_enabled      = false
  argo_helm_enabled = false

  control_plane_values = local.values
}

# Please, see README.md and Argo Kubernetes deployment method for implications of using Kubernetes installation method
module "addon_installation_argo_kubernetes" {
  source = "../../"

  enabled           = true
  argo_enabled      = true
  argo_helm_enabled = false

  control_plane_values = local.values

  crds_argo_sync_policy          = local.sync_policy
  control_plane_argo_sync_policy = local.sync_policy
}

module "addon_installation_argo_helm" {
  source = "../../"

  enabled           = true
  argo_enabled      = true
  argo_helm_enabled = true

  control_plane_values = local.values

  crds_argo_sync_policy          = local.sync_policy
  control_plane_argo_sync_policy = local.sync_policy
}
